/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package responsi_123210058;

import javax.swing.JOptionPane; //import biar bisa pake gui
import java.sql.*;              //import sql
import database.Config;         //import kelas Config dr package database
import javax.swing.table.DefaultTableModel;  //utk membuat tabel nnti

/**
 *
 * @author PC PRAKTIKUM
 */
public class Menu extends javax.swing.JFrame {
    Connection conn;    //deklarasi koneksi
    Statement stmt;     //deklarasi statement
    ResultSet rs;       //deklarasi result set
    Config koneksi;     //deklarasi kelas Config
    DefaultTableModel dtm;  //deklarasi model tabel
    ResultSetMetaData rsmd; ///untuk membaca kolom tabel
    
    String judul, alur, penokohan, akting, nilai; //variabel yg dipakai
       /**
     * Creates new form Main
     */
    public Menu() {
        initComponents();
        koneksi = new Config();
        conn = koneksi.getConnection();  //buat koneksi
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabel = new javax.swing.JTable();
        jTextFieldJUDUL = new javax.swing.JTextField();
        jTextFieldALUR = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTOKOH = new javax.swing.JTextField();
        jTextFieldAKTING = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonTAMBAH = new javax.swing.JButton();
        jButtonUPDATE = new javax.swing.JButton();
        jButtonDELETE = new javax.swing.JButton();
        jButtonCLEAR = new javax.swing.JButton();
        jTextFieldNILAI = new javax.swing.JTextField();
        jButtonTAMPIL = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCARI = new javax.swing.JTextField();
        jComboBoxCARI = new javax.swing.JComboBox<>();
        jButtonCARI = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Judul");

        jTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "judul", "alur", "penokohan", "akting", "nilai"
            }
        ));
        jTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabel);

        jLabel2.setText("Alur");

        jTextFieldTOKOH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTOKOHActionPerformed(evt);
            }
        });

        jLabel3.setText("Penokohan");

        jLabel4.setText("Akting");

        jButtonTAMBAH.setBackground(new java.awt.Color(204, 204, 204));
        jButtonTAMBAH.setText("Tambah");
        jButtonTAMBAH.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonTAMBAH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTAMBAHActionPerformed(evt);
            }
        });

        jButtonUPDATE.setBackground(new java.awt.Color(204, 204, 204));
        jButtonUPDATE.setText("Update");
        jButtonUPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUPDATEActionPerformed(evt);
            }
        });

        jButtonDELETE.setBackground(new java.awt.Color(204, 204, 204));
        jButtonDELETE.setText("Delete");
        jButtonDELETE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELETEActionPerformed(evt);
            }
        });

        jButtonCLEAR.setBackground(new java.awt.Color(204, 204, 204));
        jButtonCLEAR.setText("Clear");
        jButtonCLEAR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCLEARActionPerformed(evt);
            }
        });

        jButtonTAMPIL.setBackground(new java.awt.Color(204, 204, 204));
        jButtonTAMPIL.setText("Tampil");
        jButtonTAMPIL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonTAMPIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTAMPILActionPerformed(evt);
            }
        });

        jLabel5.setText("Cari data: ");

        jTextFieldCARI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCARIActionPerformed(evt);
            }
        });

        jComboBoxCARI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "judul", "alur", "penokohan", "akting" }));

        jButtonCARI.setBackground(new java.awt.Color(204, 204, 204));
        jButtonCARI.setText("Cari");
        jButtonCARI.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCARI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCARIActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 204));
        jLabel6.setText("PENGELOLAAN DATA MOVIE !!!");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(413, 413, 413))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldALUR)
                    .addComponent(jTextFieldTOKOH)
                    .addComponent(jTextFieldAKTING)
                    .addComponent(jTextFieldNILAI)
                    .addComponent(jTextFieldJUDUL)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCARI, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCARI, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCARI, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonCLEAR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonTAMBAH, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                .addComponent(jButtonUPDATE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonDELETE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonTAMPIL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))))
                .addGap(134, 134, 134))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldCARI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCARI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCARI)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldJUDUL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldALUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTOKOH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAKTING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jTextFieldNILAI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonTAMBAH)
                            .addComponent(jButtonTAMPIL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonUPDATE)
                            .addComponent(jButtonDELETE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCLEAR))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTOKOHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTOKOHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTOKOHActionPerformed

    private void jButtonDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELETEActionPerformed
        // TODO add your handling code here:
        hapusData();    //hapus
        clearForm();    //clear form    
        
    }//GEN-LAST:event_jButtonDELETEActionPerformed

    private void jButtonTAMBAHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTAMBAHActionPerformed
        // TODO add your handling code here:
        judul = jTextFieldJUDUL.getText();      //deklarasi variabel td biar ga nulis manual semua
        alur = jTextFieldALUR.getText();        //sama
        penokohan = jTextFieldTOKOH.getText();  //sama
        akting = jTextFieldAKTING.getText();    //sama
        nilai = jTextFieldNILAI.getText();      //sama
       
        
        insertData();   //masukkan data
        clearForm();    //di clear biar rapi stetlah input
        
    }//GEN-LAST:event_jButtonTAMBAHActionPerformed

    private void jButtonUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUPDATEActionPerformed
        // TODO add your handling code here:
        judul = jTextFieldJUDUL.getText();      //deklarasi variabel td biar ga nulis manual semua
        alur = jTextFieldALUR.getText();        //sama
        penokohan = jTextFieldTOKOH.getText();  //sama
        akting = jTextFieldAKTING.getText();    //sama
        nilai = jTextFieldNILAI.getText();      //sama

        updateData();       //update data
        
    }//GEN-LAST:event_jButtonUPDATEActionPerformed

    private void jTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelMouseClicked
        // TODO add your handling code here:
       int baris = jTabel.rowAtPoint(evt.getPoint());                   //ngambil data di tabel dg di click
       String judul = jTabel.getValueAt(baris, 0).toString();       //kolom judul
       String alur = jTabel.getValueAt(baris, 1).toString();        //kolom alur
       String penokohan = jTabel.getValueAt(baris, 2).toString();   //kolom penokohsn
       String akting = jTabel.getValueAt(baris, 3).toString();      //kolom akting
       String nilai = jTabel.getValueAt(baris, 4).toString();       //kolom nilai
 
       
       
       jTextFieldJUDUL.setText(judul);          //buat menampilkan nilai dari tabel tadi ke field tertentu
       jTextFieldALUR.setText(alur); 
       jTextFieldTOKOH.setText(penokohan);            
       jTextFieldAKTING.setText(akting);
       jTextFieldNILAI.setText(nilai);
        
    }//GEN-LAST:event_jTabelMouseClicked

    private void jButtonTAMPILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTAMPILActionPerformed
        // TODO add your handling code here:
        tampilTabel();      //tampil di tabel
        
    }//GEN-LAST:event_jButtonTAMPILActionPerformed

    private void jButtonCLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCLEARActionPerformed
        // TODO add your handling code here:
        clearForm();    //clear di form
        
    }//GEN-LAST:event_jButtonCLEARActionPerformed

    private void jTextFieldCARIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCARIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCARIActionPerformed

    private void jButtonCARIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCARIActionPerformed
        // TODO add your handling code here:
    String selectedItem = jComboBoxCARI.getSelectedItem().toString();       //buat ngsmbil data dari combo box berdasarkan kategori tertentu
    String query = jTextFieldCARI.getText().toLowerCase();                  //ambil dari text field
    String columnName = "";                                                 //dari nama kolom
    if (selectedItem.equals("judul")) {             //klo judul yg dipilih cocokin dg judul
        columnName = "judul";
    } else if (selectedItem.equals("alur")) {       //klo alur yg dipilih cocokin dg alur
        columnName = "alur";
    } else if (selectedItem.equals("penokohan")) {  //klo penokohan yg dipilih ccokin dg penokohan
        columnName = "penokohan";
    } else if (selectedItem.equals("akting")) {     //klo akting yg dipilih cocokin dg akting
        columnName = "akting";
    }

    try {
        
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/movie_db", "root", ""); //nuat koneksi ke database
        Statement stmt = conn.createStatement();                                                                         //statementnya
        String sqlQuery = "SELECT * FROM movie WHERE LOWER(" + columnName + ") LIKE '%" + query + "%'";                 //query nya
        ResultSet resultSet = stmt.executeQuery(sqlQuery);
        DefaultTableModel model = (DefaultTableModel) jTabel.getModel();                //table modelnya
        model.setRowCount(0);                                                    // baris ke 0
        while (resultSet.next()) {
            Object[] row = { resultSet.getString("judul"), resultSet.getString("alur"), resultSet.getString("penokohan"),resultSet.getString("akting"),resultSet.getString("nilai") };
            model.addRow(row);                                                  //ambil data dari tabel
        }
        resultSet.close();
        stmt.close();
        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();        //handling
    }
        
    }//GEN-LAST:event_jButtonCARIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    
     private void clearForm(){
        jTextFieldJUDUL.setText("");            //buat bersihin field
        jTextFieldALUR.setText("");
        jTextFieldTOKOH.setText("");
        jTextFieldAKTING.setText("");
        jTextFieldNILAI.setText("");
    }
    

     
     private boolean insertData(){
    try{
        stmt = conn.createStatement();                  //koneksi
        
        int insert = stmt.executeUpdate("INSERT INTO movie( judul, alur, penokohan, akting, nilai) VALUES ('" + judul + "','" + alur + "','" + penokohan + "','" + akting + "','"+  nilai + "')");      //sql tambah data
        
        if (insert == 1) {          //klo berhasil muncul panel
            JOptionPane.showMessageDialog(rootPane, "Data Tersimpan");
        }return true;
    }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "error : " + ex.getMessage());   //klo gagal muncul errornya
    }return false;
       
    }
     
     private boolean updateData(){
     try{
        stmt = conn.createStatement();
        
        int update = stmt.executeUpdate("UPDATE movie SET judul='" + judul + "',"       //update data semua field WHERE nya berdasarkan judul
                +"alur = '" + alur + "', "
                + "penokohan = '" + penokohan + "', "                           
                + "akting = '" + akting + "', "
                + "nilai = '" + nilai + "'"
                + "WHERE judul='" + judul + "'");   
        
        if (update == 1) {
            JOptionPane.showMessageDialog(rootPane, "Data Diubah");  //keterangan berhasil
        }
        return true;
    }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "error 2: " + ex.getMessage());  //gagal
    }return false;
    
    }
     
     private boolean hapusData(){
     try{
        stmt = conn.createStatement();
        
        int delete = stmt.executeUpdate("DELETE FROM movie WHERE judul='" + jTextFieldJUDUL.getText() + "'");   //hapus data berdasarkan judul
            
        if (delete == 1) {
            JOptionPane.showMessageDialog(rootPane, "Data Terhapus");  //berhasil 
        }
        return true;
    }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "error 2: " + ex.getMessage()); //gagal
    }return false;
    
    } 
     
     
  
     
      private boolean tampilTabel(){
        String sql = "SELECT * FROM movie ";        //memanggil semua data dr tabel movie
    try {
    stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
    rs = stmt.executeQuery(sql);

    rs.last();
        if (rs.getRow() == 0) {
            JOptionPane.showMessageDialog( null, "Data tidak ditemukan!"); //data tidak ada
        } else {
            rs.beforeFirst();
            dtm = buatTabelModel(rs);                                                       //tampil ke tabel
            jTabel.setModel(dtm);
            jTabel.setAutoCreateRowSorter(true);
    }
        return true;
        
    }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "error 3: " + ex.getMessage());     //error handling
    }return false;
    }    
     
     private DefaultTableModel buatTabelModel(ResultSet rs) throws SQLException {       //bikin tabel model
        dtm = new DefaultTableModel();
        rsmd = rs.getMetaData();
        int jmlKolom = rsmd.getColumnCount();
        
        String[] namaKolom = new String [jmlKolom];                         //hitung data dari tabelnya (jmlh kolom, nama kolom)
        for (int i=0; i<jmlKolom; i++) {
            namaKolom[i] = rsmd.getColumnName(i+1);
        }
        dtm.setColumnIdentifiers(namaKolom);
        
        while (rs.next()){
            String[] dataBuku = new String [jmlKolom];
            for (int i=0; i<jmlKolom; i++){
                dataBuku[i] =rs.getString(i+1);
            }
            dtm.addRow(dataBuku);
        }
        return dtm;                                                         //masukkin hasilnya ke dtm / defaulttablemodel
    }
     
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCARI;
    private javax.swing.JButton jButtonCLEAR;
    private javax.swing.JButton jButtonDELETE;
    private javax.swing.JButton jButtonTAMBAH;
    private javax.swing.JButton jButtonTAMPIL;
    private javax.swing.JButton jButtonUPDATE;
    private javax.swing.JComboBox<String> jComboBoxCARI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabel;
    private javax.swing.JTextField jTextFieldAKTING;
    private javax.swing.JTextField jTextFieldALUR;
    private javax.swing.JTextField jTextFieldCARI;
    private javax.swing.JTextField jTextFieldJUDUL;
    private javax.swing.JTextField jTextFieldNILAI;
    private javax.swing.JTextField jTextFieldTOKOH;
    // End of variables declaration//GEN-END:variables
}
